###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.1.11101/W32 for ARM       18/Dec/2023  17:37:04
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\App\drivefree.c
#    Command line =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\App\drivefree.c
#        -D USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_USB_OTG_FS -lC
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\List
#        --diag_suppress Pa050 -o
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\ -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\cpu\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Drv\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\App\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\App\fat\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\bsp\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Dev\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\OsConfig\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\FAT_FS\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\USB\STM32_USB_HOST_Library\Class\MSC\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\USB\STM32_USB_HOST_Library\Core\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\USB\STM32_USB_OTG_Driver\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Util\Third_Party\FreeRTOS_v7.6.0\portable\IAR\ARM_CM3\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Util\Third_Party\FreeRTOS_v7.6.0\include\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\OsConfig\usbConf\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\FAT_FS\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\FAT_FS\drivers\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  C
#    List file    =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\List\drivefree.lst
#    Object file  =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\Obj\drivefree.o
#
###############################################################################

E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\App\drivefree.c
      1          /*
      2          ********************************************************************************	
      3          *
      4          *              (c) Copyright 2014, loopsystem
      5          *                      All rights reserved
      6          *
      7          * Filename    : drivefree.c
      8          * Description : total, free size
      9          ********************************************************************************
     10          */
     11          #include <string.h>
     12          #include "includes.h"
     13          //#define __DEBUG
     14          

   \                                 In section .bss, align 4
     15          FILINFO Finfo;
   \                     Finfo:
   \   00000000                      DS8 24
     16          FATFS *fs;
     17          DWORD fre_clust, fre_sect, tot_sect;
     18          INT8U firstfile = 0;
   \                     firstfile:
   \   00000018                      DS8 1
   \   00000019                      DS8 3
   \                     fs:
   \   0000001C                      DS8 4
   \                     fre_clust:
   \   00000020                      DS8 4
   \                     fre_sect:
   \   00000024                      DS8 4
   \                     tot_sect:
   \   00000028                      DS8 4
     19          
     20          /*
     21          ********************************************************************************
     22          * Description : scan files
     23          * Arguments   : None
     24          * Return      : None
     25          * Note        : 
     26          ******************************************************************************** 
     27          */

   \                                 In section .text, align 2, keep-with-next
     28          FRESULT scan_files (
     29          	char* path		/* Pointer to the working buffer with start path */
     30          )
     31          {
   \                     scan_files: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
   \   00000006   0x4604             MOV      R4,R0
     32          	DIR dirs;
     33          	FRESULT res;
     34          	INT32U totalsize, freesize;
     35          	INT32U ctime, mtime;
     36          
     37          #if _USE_LFN
     38             static char lfn[_MAX_LFN * (_DF1S ? 2 : 1) + 1];
     39             Finfo.lfname = lfn;
     40             Finfo.lfsize = sizeof(lfn);
     41          #endif
     42          
     43          	/* Get volume information and free clusters of drive 0 */
     44            res = f_getfree("", &fre_clust, &fs);
   \   00000008   0x....             LDR.N    R6,??DataTable1_1
   \   0000000A   0xF106 0x021C      ADD      R2,R6,#+28
   \   0000000E   0xF106 0x0120      ADD      R1,R6,#+32
   \   00000012   0x....             ADR.N    R0,??DataTable1  ;; ""
   \   00000014   0x.... 0x....      BL       f_getfree
     45            /* Get total sectors and free sectors */
     46            tot_sect = (fs->n_fatent - 2) * fs->csize;
   \   00000018   0x69F0             LDR      R0,[R6, #+28]
   \   0000001A   0x6981             LDR      R1,[R0, #+24]
   \   0000001C   0x1E89             SUBS     R1,R1,#+2
   \   0000001E   0x7882             LDRB     R2,[R0, #+2]
   \   00000020   0x4351             MULS     R1,R2,R1
   \   00000022   0x62B1             STR      R1,[R6, #+40]
     47            fre_sect = fre_clust * fs->csize;	
   \   00000024   0x6A32             LDR      R2,[R6, #+32]
   \   00000026   0x7880             LDRB     R0,[R0, #+2]
   \   00000028   0x4350             MULS     R0,R0,R2
   \   0000002A   0x6270             STR      R0,[R6, #+36]
     48          	
     49          	totalsize = (tot_sect / 2);
   \   0000002C   0xEA4F 0x0851      LSR      R8,R1,#+1
     50          	freesize = (fre_sect / 2);
   \   00000030   0x0845             LSRS     R5,R0,#+1
     51            
     52          	res = f_opendir(&dirs, path);
   \   00000032   0x4621             MOV      R1,R4
   \   00000034   0x4668             MOV      R0,SP
   \   00000036   0x.... 0x....      BL       f_opendir
   \   0000003A   0x0004             MOVS     R4,R0
     53          	if (res == FR_OK) {
   \   0000003C   0x....             LDR.N    R7,??DataTable1_2
   \   0000003E   0xD035             BEQ.N    ??scan_files_0
     54          		while (((res = f_readdir(&dirs, &Finfo)) == FR_OK) && Finfo.fname[0]) {
     55          			if (_FS_RPATH && Finfo.fname[0] == '.') continue;
     56          			if (!(Finfo.fattrib & AM_DIR)) {
     57          				ctime = Finfo.fdate;
     58          				ctime = (ctime<<16 | Finfo.ftime);
     59          				if(!firstfile) {
     60          					mtime = ctime;
     61          					firstfile = 1;
     62          				}
     63          				else {
     64          					if(ctime < mtime) {
     65          						mtime = ctime;
     66          					}
     67          				}
     68          #ifdef __DEBUG
     69          				xprintf(PSTR("\rctime = %lu.\n"), ctime);
     70          #endif
     71          				AccFiles++;
     72          				AccSize += Finfo.fsize;
     73          			}
     74          		}
     75              f_closedir(&dirs);
     76          	}
     77          	else {
     78          		AccFiles = 0;
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x8038             STRH     R0,[R7, #+0]
     79          		AccSize = 0;
   \   00000044   0x....             LDR.N    R1,??DataTable1_3
   \   00000046   0x6008             STR      R0,[R1, #+0]
     80          	}
     81          
     82          #ifdef __DEBUG
     83          	printk("\r%u files, %lu bytes.\n%u folders.\n"
     84          				 "%lu KB total disk space.\n%lu KB available.\n",
     85          			AccFiles, AccSize, AccDirs,	totalsize, freesize);
     86          #endif
     87          	firstfile = 0;
   \                     ??scan_files_1: (+1)
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x7630             STRB     R0,[R6, #+24]
     88            if((freesize < (totalsize*0.2)) || (AccFiles >= MAX_FILE)) {
   \   0000004C   0x883E             LDRH     R6,[R7, #+0]
   \   0000004E   0x4637             MOV      R7,R6
   \   00000050   0x4640             MOV      R0,R8
   \   00000052   0x.... 0x....      BL       __aeabi_ui2d
   \   00000056   0x....             LDR.N    R2,??DataTable1_4  ;; 0x9999999a
   \   00000058   0x....             LDR.N    R3,??DataTable1_5  ;; 0x3fc99999
   \   0000005A   0x.... 0x....      BL       __aeabi_dmul
   \   0000005E   0x4602             MOV      R2,R0
   \   00000060   0x460B             MOV      R3,R1
   \   00000062   0x4690             MOV      R8,R2
   \   00000064   0x4699             MOV      R9,R3
   \   00000066   0x4628             MOV      R0,R5
   \   00000068   0x.... 0x....      BL       __aeabi_ui2d
   \   0000006C   0x4642             MOV      R2,R8
   \   0000006E   0x464B             MOV      R3,R9
   \   00000070   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000074   0xD302             BCC.N    ??scan_files_2
   \   00000076   0xF5B7 0x7FC8      CMP      R7,#+400
   \   0000007A   0xDB29             BLT.N    ??scan_files_3
     89              if(AccFiles < DELETE_FACTOR)
   \                     ??scan_files_2: (+1)
   \   0000007C   0x....             LDR.N    R0,??DataTable1_6
   \   0000007E   0x2F64             CMP      R7,#+100
   \   00000080   0xDA21             BGE.N    ??scan_files_4
     90                DelFiles = 1;
   \   00000082   0x2101             MOVS     R1,#+1
   \   00000084   0x8001             STRH     R1,[R0, #+0]
   \   00000086   0xE021             B.N      ??scan_files_5
   \                     ??scan_files_6: (+1)
   \   00000088   0x282E             CMP      R0,#+46
   \   0000008A   0xD00F             BEQ.N    ??scan_files_0
   \   0000008C   0x7A30             LDRB     R0,[R6, #+8]
   \   0000008E   0x06C0             LSLS     R0,R0,#+27
   \   00000090   0xD40C             BMI.N    ??scan_files_0
   \   00000092   0x7E30             LDRB     R0,[R6, #+24]
   \   00000094   0x2800             CMP      R0,#+0
   \   00000096   0xD101             BNE.N    ??scan_files_7
   \   00000098   0x2001             MOVS     R0,#+1
   \   0000009A   0x7630             STRB     R0,[R6, #+24]
   \                     ??scan_files_7: (+1)
   \   0000009C   0x8838             LDRH     R0,[R7, #+0]
   \   0000009E   0x1C40             ADDS     R0,R0,#+1
   \   000000A0   0x8038             STRH     R0,[R7, #+0]
   \   000000A2   0x....             LDR.N    R0,??DataTable1_3
   \   000000A4   0x6801             LDR      R1,[R0, #+0]
   \   000000A6   0x6832             LDR      R2,[R6, #+0]
   \   000000A8   0x1851             ADDS     R1,R2,R1
   \   000000AA   0x6001             STR      R1,[R0, #+0]
   \                     ??scan_files_0: (+1)
   \   000000AC   0x4631             MOV      R1,R6
   \   000000AE   0x4668             MOV      R0,SP
   \   000000B0   0x.... 0x....      BL       f_readdir
   \   000000B4   0x0004             MOVS     R4,R0
   \   000000B6   0xD102             BNE.N    ??scan_files_8
   \   000000B8   0x7A70             LDRB     R0,[R6, #+9]
   \   000000BA   0x0001             MOVS     R1,R0
   \   000000BC   0xD1E4             BNE.N    ??scan_files_6
   \                     ??scan_files_8: (+1)
   \   000000BE   0x4668             MOV      R0,SP
   \   000000C0   0x.... 0x....      BL       f_closedir
   \   000000C4   0xE7C0             B.N      ??scan_files_1
     91              else
     92                DelFiles = AccFiles - (MAX_FILE - DEL_FILE);
   \                     ??scan_files_4: (+1)
   \   000000C6   0xF5A6 0x71AF      SUB      R1,R6,#+350
   \   000000CA   0x8001             STRH     R1,[R0, #+0]
     93              
     94              return FR_DISK_FULL;
   \                     ??scan_files_5: (+1)
   \   000000CC   0x2014             MOVS     R0,#+20
   \   000000CE   0xE000             B.N      ??scan_files_9
     95            }
     96          	return res;
   \                     ??scan_files_3: (+1)
   \   000000D0   0x4620             MOV      R0,R4
   \                     ??scan_files_9: (+1)
   \   000000D2   0xB009             ADD      SP,SP,#+36
   \   000000D4   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
     97          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     Finfo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     AccFiles

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     AccSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x3FC99999         DC32     0x3fc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     DelFiles

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_0:
   \   00000000   0x00               DC8 ""
     98          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      64   scan_files
        64   -> __aeabi_dmul
        64   -> __aeabi_ui2d
        64   -> f_closedir
        64   -> f_getfree
        64   -> f_opendir
        64   -> f_readdir
        64 __aeabi_cdcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       1  ?_0
      44  Finfo
          firstfile
          fs
          fre_clust
          fre_sect
          tot_sect
     216  scan_files

 
  44 bytes in section .bss
   1 byte  in section .rodata
 244 bytes in section .text
 
 244 bytes of CODE  memory
   1 byte  of CONST memory
  44 bytes of DATA  memory

Errors: none
Warnings: none
