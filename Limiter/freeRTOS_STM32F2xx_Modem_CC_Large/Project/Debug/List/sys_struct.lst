###############################################################################
#
# IAR ANSI C/C++ Compiler V7.60.1.11101/W32 for ARM       18/Dec/2023  17:37:06
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\App\sys_struct.c
#    Command line =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\App\sys_struct.c
#        -D USE_STDPERIPH_DRIVER -D STM32F2XX -D USE_USB_OTG_FS -lC
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\List
#        --diag_suppress Pa050 -o
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\Obj
#        --no_unroll --no_inline --no_tbaa --no_scheduling --debug
#        --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.4\arm\INC\c\DLib_Config_Full.h" -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\ -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\cpu\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Drv\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\App\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\App\fat\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\bsp\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Dev\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\OsConfig\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F2xx\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\FAT_FS\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\STM32F2xx_StdPeriph_Driver\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\USB\STM32_USB_HOST_Library\Class\MSC\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\USB\STM32_USB_HOST_Library\Core\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\USB\STM32_USB_OTG_Driver\inc\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Util\Third_Party\FreeRTOS_v7.6.0\portable\IAR\ARM_CM3\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Util\Third_Party\FreeRTOS_v7.6.0\include\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\OsConfig\usbConf\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\FAT_FS\
#        -I
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\..\Libraries\FAT_FS\drivers\
#        -Om --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.4\arm\CMSIS\Include\"
#    Locale       =  C
#    List file    =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\List\sys_struct.lst
#    Object file  =  
#        E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\Project\Debug\Obj\sys_struct.o
#
###############################################################################

E:\LOOP\SCRDPF\OBD\freeRTOS_STM32F2xx_Modem_CC_Large\App\sys_struct.c
      1          #define SYS_GLOBALS
      2          #include "includes.h"

   \                                 In section .bss, align 4
   \   __absolute Prjcode_t tPrjcode
   \                     tPrjcode:
   \   00000000                      DS8 28

   \                                 In section .bss, align 4
   \   __absolute sysinfo_t _sysinfo
   \                     _sysinfo:
   \   00000000                      DS8 96

   \                                 In section .bss, align 4
   \   __absolute SysControl_t SysSet
   \                     SysSet:
   \   00000000                      DS8 204
      3          
      4          

   \                                 In section .text, align 2, keep-with-next
      5          void struct_init( sysinfo_t *s)
      6          {
      7          	s->major_ver		= 0;	
   \                     struct_init: (+1)
   \   00000000   0x2100             MOVS     R1,#+0
   \   00000002   0x7001             STRB     R1,[R0, #+0]
      8          	s->minor_ver		= 1;
   \   00000004   0x2101             MOVS     R1,#+1
   \   00000006   0x7041             STRB     R1,[R0, #+1]
      9          	s->tInfiniteLoop	= 0;
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x7081             STRB     R1,[R0, #+2]
     10          	s->twatchCliFlag	= 1;
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x70C1             STRB     R1,[R0, #+3]
     11          	s->twatchCliCount	= 0;
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x7101             STRB     R1,[R0, #+4]
     12          	s->twatchTmrFlag	= 1;
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x7141             STRB     R1,[R0, #+5]
     13          	s->twatchTmrCount	= 0;
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x7181             STRB     R1,[R0, #+6]
     14          	s->twatchCanFlag	= 1;
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x71C1             STRB     R1,[R0, #+7]
     15          	s->twatchCanCount	= 0;
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x7201             STRB     R1,[R0, #+8]
     16          	s->twatchUSBFlag	= 1;
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x7241             STRB     R1,[R0, #+9]
     17          	s->twatchUSBCount	= 0;
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x7281             STRB     R1,[R0, #+10]
     18          	s->twatchKeyFlag	= 1;
   \   0000002C   0x2101             MOVS     R1,#+1
   \   0000002E   0x72C1             STRB     R1,[R0, #+11]
     19          	s->twatchKeyCount	= 0;
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x7301             STRB     R1,[R0, #+12]
     20          	s->twatchObdFlag	= 1;
   \   00000034   0x2101             MOVS     R1,#+1
   \   00000036   0x7341             STRB     R1,[R0, #+13]
     21          	s->twatchObdCount	= 0;
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x7381             STRB     R1,[R0, #+14]
     22          	s->twatchModFlag	= 1;
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x73C1             STRB     R1,[R0, #+15]
     23          	s->twatchModCount	= 0;
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x7401             STRB     R1,[R0, #+16]
     24          	s->twatchGpsFlag	= 1;
   \   00000044   0x2101             MOVS     R1,#+1
   \   00000046   0x7441             STRB     R1,[R0, #+17]
     25          	s->twatchGpsCount	= 0;  
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x7481             STRB     R1,[R0, #+18]
     26          	s->key.keyon_flag	= 0;
   \   0000004C   0x6141             STR      R1,[R0, #+20]
     27          	s->key.keyon_st		= ON;
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x7641             STRB     R1,[R0, #+25]
     28          	s->key.poweroff_save = FALSE;
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x7681             STRB     R1,[R0, #+26]
     29          	s->key.nStatus		   = 0;
   \   00000056   0x76C1             STRB     R1,[R0, #+27]
     30          	s->key.OffCount		   = 0;
   \   00000058   0x7601             STRB     R1,[R0, #+24]
     31          
     32          	memset((char *)&s->filename[0], 0x00, FILE_NAME_SIZE);
   \   0000005A   0x460A             MOV      R2,R1
   \   0000005C   0x2114             MOVS     R1,#+20
   \   0000005E   0x3048             ADDS     R0,R0,#+72
   \   00000060   0x.... 0x....      B.W      __aeabi_memset4
     33          }
     34          
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void sys_struct_init(void)
     37          {
     38          	sysinfo_t *s = &_sysinfo 	;
     39          	struct_init( s );
   \                     sys_struct_init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable4_2
   \   00000002   0x....             B.N      struct_init
     40          }
     41          
     42          #define PATH_PO			2
     43          #define FILE_EXTEN		4
     44          #define FILE_NAMEMAX	7
     45          

   \                                 In section .text, align 2, keep-with-next
     46          INT8U MakeFileName(INT8U Path, char *Target, char *Sorce, INT8U size)
     47          {
   \                     MakeFileName: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB086             SUB      SP,SP,#+24
   \   00000006   0x4604             MOV      R4,R0
   \   00000008   0x460D             MOV      R5,R1
   \   0000000A   0x4616             MOV      R6,R2
   \   0000000C   0x461F             MOV      R7,R3
     48          	char tmp[FILE_NAME_SIZE];
     49          	memset(tmp, 0 ,FILE_NAME_SIZE);
   \   0000000E   0x2200             MOVS     R2,#+0
   \   00000010   0x2114             MOVS     R1,#+20
   \   00000012   0x4668             MOV      R0,SP
   \   00000014   0x.... 0x....      BL       __aeabi_memset4
     50          
     51          	if(size > FILE_NAME_SIZE - FILE_NAMEMAX)		//hms0:xxxxxxxxxxxxx.xcl : Name 13자리까지만 허용한다.
   \   00000018   0x46B8             MOV      R8,R7
   \   0000001A   0xF1B8 0x0F0E      CMP      R8,#+14
   \   0000001E   0xDB01             BLT.N    ??MakeFileName_0
     52          		return 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0xE022             B.N      ??MakeFileName_1
     53          
     54          	if(Path == SAVE_SD)	// SD Card Memory save file name....
   \                     ??MakeFileName_0: (+1)
   \   00000024   0x2C00             CMP      R4,#+0
   \   00000026   0xD105             BNE.N    ??MakeFileName_2
     55          	{
     56          		memcpy( tmp, "0:", PATH_PO );
   \   00000028   0x2202             MOVS     R2,#+2
   \   0000002A   0x....             ADR.N    R1,??DataTable4  ;; 0x30, 0x3A, 0x00, 0x00
   \   0000002C   0x4668             MOV      R0,SP
   \   0000002E   0x.... 0x....      BL       __aeabi_memcpy4
     57          	}
   \   00000032   0xE004             B.N      ??MakeFileName_3
     58          	else				// USB Memory save file name....
     59          	{
     60          		memcpy( tmp, "1:", PATH_PO );
   \                     ??MakeFileName_2: (+1)
   \   00000034   0x2202             MOVS     R2,#+2
   \   00000036   0x....             ADR.N    R1,??DataTable4_1  ;; 0x31, 0x3A, 0x00, 0x00
   \   00000038   0x4668             MOV      R0,SP
   \   0000003A   0x.... 0x....      BL       __aeabi_memcpy4
     61          	}
     62          	memcpy(&tmp[PATH_PO]     , &Sorce[0], size                        );
   \                     ??MakeFileName_3: (+1)
   \   0000003E   0x463A             MOV      R2,R7
   \   00000040   0x4631             MOV      R1,R6
   \   00000042   0xF10D 0x0002      ADD      R0,SP,#+2
   \   00000046   0x.... 0x....      BL       __aeabi_memcpy
     63          	memcpy(&tmp[size+PATH_PO], ".xls"   , FILE_EXTEN                  );
   \   0000004A   0x2204             MOVS     R2,#+4
   \   0000004C   0x.... 0x....      ADR.W    R1,?_2
   \   00000050   0x4668             MOV      R0,SP
   \   00000052   0x4440             ADD      R0,R0,R8
   \   00000054   0x1C80             ADDS     R0,R0,#+2
   \   00000056   0x.... 0x....      BL       __aeabi_memcpy
     64          	memcpy(Target            , tmp      , (size+PATH_PO + FILE_EXTEN) );
   \   0000005A   0xF108 0x0206      ADD      R2,R8,#+6
   \   0000005E   0x4669             MOV      R1,SP
   \   00000060   0x4628             MOV      R0,R5
   \   00000062   0x.... 0x....      BL       __aeabi_memcpy
     65          	return (size+2);
   \   00000066   0x1CB8             ADDS     R0,R7,#+2
   \   00000068   0xB2C0             UXTB     R0,R0
   \                     ??MakeFileName_1: (+1)
   \   0000006A   0xB006             ADD      SP,SP,#+24
   \   0000006C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
     66          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x30 0x3A          DC8      0x30, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x31 0x3A          DC8      0x31, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     _sysinfo

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x2E 0x78          DC8 ".xls"
   \              0x6C 0x73    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x30 0x3A          DC8 "0:"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x31 0x3A          DC8 "1:"
   \              0x00         
   \   00000003   0x00               DC8 0
     67          
     68          
     69                                                  
     70                                                  
     71                                                  

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      48   MakeFileName
        48   -> __aeabi_memcpy
        48   -> __aeabi_memcpy4
        48   -> __aeabi_memset4
       0   struct_init
         0   -> __aeabi_memset4
       0   sys_struct_init
         0   -> struct_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ?_0
       4  ?_1
       8  ?_2
     112  MakeFileName
     204  SysSet
      96  _sysinfo
     100  struct_init
       4  sys_struct_init
      28  tPrjcode

 
 328 bytes in section .bss
   8 bytes in section .rodata
 236 bytes in section .text
 
 236 bytes of CODE  memory
   8 bytes of CONST memory
 328 bytes of DATA  memory

Errors: none
Warnings: none
